<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>[topcoder] Search API</title>

    <!-- Bootstrap -->
    <link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" />

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>
  <body>

      <div class="container">
      <h1>[topcoder] Search API</h1>

      <p>This is running against live, production data in Elasticsearch coming from the <a href="http://api.topcoder.com/v2/develop/challenges">API</a>. A task runs every 10 minutes that calls the topcoder API and loads development and design challenges into Elasticsearch.</p>

      <p>By default, all challenge type data is searchable together unless you specify otherwise. For instance, if you search for "IDOL" it will return all design and development challenges with the keyword "IDOL". If you want to only search specific types of challenges you can do so (see bottom of page) and return results for the specified type of challenge.</p>

      <p><strong>What it doesn't do:</strong> As of now it cannot perform comparison operations such as return all challenges where the prize money GTE $500 or where the start date > today.</p>

      <h3>Keyword search across all fields (anywhere!) in the challenge</h3>
      <blockquote><a href="/challenges/search?q=assembly">/challenges/search?q=assembly</a></blockquote>

      <h3>Keyword search in challenge name</h3>
      <p>Essentially you can search by almost any key in the JSON doc by substituting it below in the query param.</p>
      <blockquote><a href="/challenges/search?q=challengeName:IDOL">/challenges/search?q=challengeName:IDOL</a></blockquote>

      <h3>Return challenge by ID</h3>
      <blockquote><a href="/challenges/search?q=challengeId:30042021">/challenges/search?q=challengeId:30042021</a></blockquote>

      <h3>Return all "First2Finish' challenges</h3>
      <blockquote><a href="/challenges/search?q=challengeType:First2Finish">/challenges/search?q=challengeType:First2Finish</a></blockquote>

      <h3>Search for all challenges with 'Javascript' as one of the platforms</h3>
      <blockquote><a href="/challenges/search?q=technologies:javascript">/challenges/search?q=technologies:javascript</a></blockquote>

      <h3>Search for all challenges with 'Apex' and 'HTML' as one of the technologies</h3>
      <blockquote><a href="/challenges/search?q=technologies:Apex,HTML">/challenges/search?q=technologies:Apex,HTML</a></blockquote>

      <h3>Search for all challenges with 0 submissions</h3>
      <blockquote><a href="/challenges/search?q=numSubmissions:0">/challenges/search?q=numSubmissions:0</a></blockquote>

      <h1>Searching by Specific Challenge Type</h1>

      Virtually all of the above API calls work when specifying the type of challenge to return:

      <h3>Return any challenge with "IDOL" in the challenge name</h3>
      <blockquote><a href="/challenges/search?q=challengeName:IDOL">/challenges/search?q=challengeName:IDOL</a></blockquote>

      <h3>Return design challenges with "IDOL" in the challenge name</h3>
      <blockquote><a href="/challenges/design/search?q=challengeName:IDOL">/challenges/design/search?q=challengeName:IDOL</a></blockquote>

      <h3>Return development challenges with "IDOL" in the challenge name</h3>
      <blockquote><a href="/challenges/development/search?q=challengeName:IDOL">/challenges/development/search?q=challengeName:IDOL</a></blockquote>
      </div>
  </body>
</html>